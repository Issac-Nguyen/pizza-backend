{"version":3,"sources":["actions/ActionTypes.js","reducers/index.js","config.js","lib/axiosConfig.js","services/registerService.js","services/loginService.js","actions/userActions.js","lib/auth.js","components/authenForm.js","components/Icon.js","services/sendOrderService.js","services/getFeeService.js","components/drawerCart.js","actions/orderActions.js","components/layout/layout.js","components/pizza.js","components/pizzaList.js","components/cart.js","services/getAllPizzasService.js","components/app/App.js","components/mustLogin.js","services/getHistoryService.js","components/history.js","components/order.js","components/notfound.js","main.js","serviceWorker.js","index.js","store.js"],"names":["USERACTIONS","ORDERACTIONS","defaultState","user","book","order","showCart","login","showAuthenForm","rate","state","action","type","bookIdItem","uuid","concat","bookId","payload","console","log","id","i","length","bookItem","filter","email","instance","axios","create","baseURL","config","timeout","headers","Authorization","localStorage","getItem","execute","value","post","logout","closeAuthenForm","token","setItem","removeItem","TabPane","Tabs","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","connect","dispatch","register","props","ref","useState","sending","setSending","Form","useForm","formRegiser","formLogin","useEffect","resetFields","defaultActiveKey","tab","key","form","name","onFinish","values","password","registerService","then","res","data","success","authLib","message","error","msg","err","scrollToFirstError","Item","label","rules","required","max","whitespace","hasFeedback","Password","dependencies","getFieldValue","validator","rule","Promise","reject","resolve","justify","spinning","className","htmlType","disabled","loginService","Icon","other","data-testid","PizzaBookItem","src","url","number","price","onClick","event","removeAction","layout","tailLayout","bookItems","closeCart","removeBook","removeBookAction","clearCart","addOrder","imme","setImme","fee","setFee","gotFee","setGotFee","enableBtn","setEnableBtn","total","reduce","toFixed","totalText","enableFee","enableOrder","onGetFee","a","validateFields","feeService","customer_address","parseFloat","fieldsValue","getFieldsValue","format","_","map","p","pizza_id","order_items","created_at","Date","getTime","sendOrderService","configSchedule","bookItemsRender","uniqBookItems","footerList","title","placement","width","closable","onClose","visible","size","header","footer","bordered","dataSource","renderItem","item","orientation","initialValues","sendimmediate","onChange","evt","defaultChecked","checked","vl","setTimeout","showTime","disabledDate","current","moment","startOf","disabledTime","disabledHours","start","end","result","push","range","v","getHours","authenForm","to","href","e","preventDefault","authenLib","children","centered","onCancel","undefined","pizza","pizzaInfo","currency","PizzaList","allPizzas","pizzas","count","page","api","get","setPizzas","totalPage","setTotalPage","getAllPizzasService","totalItems","defaultCurrent","pageSize","MustLogin","timeStart","timeEnd","Panel","Collapse","setResult","dateFilter","setDateFilter","arrayPanel","resArr","getHistoryService","startOfDay","endOfDay","orders","o","k","vlUniq","index","renderNest","catch","customer_name","customer_phone","schedule","orderItems","order_id","renderOrderItem","style","marginTop","showToday","defaultValue","date","dateString","valueOf","textAlign","Main","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","store","createStore","reducer","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.557767e2.chunk.js","sourcesContent":["export const USERACTIONS = {\r\n    REGISTER: 'REGISTER',\r\n    LOGIN: 'LOGIN',\r\n    HISTORY: 'HISTORY',\r\n    SHOW_CART: 'SHOW_CART',\r\n    CLOSE_CART: 'CLOSE_CART',\r\n    SHOW_AUTHEN_FORM: 'SHOW_AUTHEN_FORM',\r\n    CLOSE_AUTHEN_FORM: 'CLOSE_AUTHEN_FORM',\r\n    LOGOUT: 'LOGOUT',\r\n    CLEAR_CART: 'CLEAR_CART',\r\n    ADD_ORDER: 'ADD_ORDER'\r\n}\r\n\r\nexport const ORDERACTIONS = {\r\n    ORDER: 'ORDER',\r\n    PAYMENT : 'PAYMENT',\r\n    BOOK: 'BOOK',\r\n    REMOVEBOOK: 'REMOVEBOOK'\r\n}\r\n\r\nexport const ITEMACTIONS = {\r\n    ALLPIZZA: 'ALLPIZZA',\r\n    PIZZA: 'PIZZA'\r\n}","import { uuid } from 'uuidv4';\r\nimport {USERACTIONS, ORDERACTIONS, ITEMACTIONS} from '../actions/ActionTypes';\r\nexport const defaultState = {\r\n    user: '',\r\n    book: [],\r\n    order: [],\r\n    showCart: false,\r\n    login: false,\r\n    showAuthenForm: false,\r\n    rate: 0.9\r\n}\r\nexport default (state = defaultState, action) => {\r\n    switch (action.type) {\r\n     case ORDERACTIONS.BOOK:\r\n         const bookIdItem= uuid();\r\n      return {\r\n       ...state,\r\n       book: state.book.concat({bookId: bookIdItem, ...action.payload})\r\n      }\r\n    case USERACTIONS.SHOW_CART:\r\n        return {\r\n            ...state,\r\n            showCart: true\r\n        }\r\n    case USERACTIONS.CLOSE_CART:\r\n            return {\r\n                ...state,\r\n                showCart: false\r\n            }\r\n    case USERACTIONS.CLEAR_CART:\r\n            return {\r\n                ...state,\r\n                book: []\r\n            }\r\n    case USERACTIONS.ADD_ORDER:\r\n        console.log(state.order)\r\n            return {\r\n                ...state,\r\n                order: state.order.concat([action.payload])\r\n            }\r\n    case ORDERACTIONS.REMOVEBOOK:\r\n        const id = action.payload;\r\n        let bookId;\r\n        for(let i = 0; i < state.book.length; i++) {\r\n            const bookItem = state.book[i];\r\n            if(bookItem.id == id) {\r\n                bookId = bookItem.bookId;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return {\r\n            ...state,\r\n            book: state.book.filter(i => i.bookId != bookId)\r\n        }\r\n    case USERACTIONS.REGISTER:\r\n        var {email} = action.payload;\r\n            return {\r\n                ...state,\r\n                user: email,\r\n                login: true\r\n            }\r\n    case USERACTIONS.LOGIN:\r\n        var {email} = action.payload;\r\n            return {\r\n                ...state,\r\n                user: email,\r\n                login: true\r\n            }\r\n    case USERACTIONS.LOGOUT:\r\n        return {\r\n            ...state,\r\n            user: '',\r\n            login: false\r\n        }\r\n    case USERACTIONS.SHOW_AUTHEN_FORM:\r\n            return {\r\n                ...state,\r\n                showAuthenForm: true\r\n            }\r\n    case USERACTIONS.CLOSE_AUTHEN_FORM:\r\n            return {\r\n                ...state,\r\n                showAuthenForm: false\r\n            }\r\n     default:\r\n      return state\r\n    }\r\n   }","export default {\r\n    API: `/api`,\r\n    keyJwt: 'authenJwt'\r\n}","import config from '../config';\r\nimport axios from 'axios'\r\nvar instance = axios.create({\r\n    baseURL: config.API,\r\n    timeout: 10000,\r\n    headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(config.keyJwt)\r\n    }\r\n  });\r\n\r\n  export default instance;","import axios from '../lib/axiosConfig';\r\n\r\nfunction execute(value) {\r\n    const api ='/register';\r\n    return axios.post(api, value)\r\n}\r\n\r\nexport default execute;","import axios from '../lib/axiosConfig';\r\n\r\nfunction execute(value) {\r\n    const api ='/login';\r\n    return axios.post(api, value)\r\n}\r\n\r\nexport default execute;","import {USERACTIONS} from './ActionTypes';\r\nexport const register = (userInfo) => (\r\n    {\r\n     type: USERACTIONS.REGISTER,\r\n     payload: userInfo\r\n    }\r\n)\r\n\r\nexport const login = (loginInfo) => (\r\n    {\r\n     type: USERACTIONS.LOGIN,\r\n     payload: loginInfo\r\n    }\r\n)\r\n\r\nexport const logout = () => (\r\n    {\r\n        type: USERACTIONS.LOGOUT\r\n    }\r\n)\r\n\r\nexport const showCart = () => (\r\n    {\r\n        type: USERACTIONS.SHOW_CART\r\n    }\r\n)\r\n\r\nexport const closeCart = () => (\r\n    {\r\n        type: USERACTIONS.CLOSE_CART\r\n    }\r\n)\r\n\r\nexport const showAuthenForm = () => (\r\n    {\r\n        type: USERACTIONS.SHOW_AUTHEN_FORM\r\n    }\r\n)\r\n\r\nexport const closeAuthenForm = () => (\r\n    {\r\n        type: USERACTIONS.CLOSE_AUTHEN_FORM\r\n    }\r\n)\r\n\r\nexport const clearCart = () => (\r\n    {\r\n        type: USERACTIONS.CLEAR_CART\r\n    }\r\n)\r\n\r\nexport const addOrder = (order) => (\r\n    {\r\n        type: USERACTIONS.ADD_ORDER,\r\n        payload: order\r\n    }\r\n)","import config from '../config';\r\n\r\nexport default {\r\n    saveToken: token => {\r\n        console.log(token)\r\n        localStorage.setItem(config.keyJwt, token)\r\n    },\r\n    removeToken: () => {\r\n        localStorage.removeItem(config.keyJwt)\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Tabs, Form, Input, Button, message, Spin} from 'antd';\r\nimport registerService from '../services/registerService';\r\nimport loginService from '../services/loginService'\r\nimport {connect} from 'react-redux'\r\nimport {closeAuthenForm, register, login} from '../actions/userActions';\r\nimport authLib from '../lib/auth';\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 8 },\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 16 },\r\n    },\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0,\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8,\r\n      },\r\n    },\r\n  };\r\n\r\nexport const AuthenForm = (props, ref) => {\r\n  let [sending, setSending] = useState(false);\r\n  const [formRegiser] = Form.useForm();\r\n  const [formLogin] = Form.useForm();\r\n  \r\n    const onFinishRegister = values => {\r\n      setSending(true);\r\n        const {email, password} = values;\r\n        registerService({email, password}).then(res => {\r\n          setSending(false);\r\n          if(!res.data.success) {\r\n            message.error(res.data.msg)\r\n          } else {\r\n            const token = res.data.data.token;\r\n            if(token)\r\n              authLib.saveToken(token)\r\n            props.register(email);\r\n            props.closeAuthenForm();\r\n            formRegiser.resetFields();\r\n          }\r\n        }, err => {\r\n          setSending(false);\r\n        });\r\n    };\r\n\r\n    const onFinishLogin = values => {\r\n      setSending(true);\r\n        const {email, password} = values;\r\n        loginService({email, password}).then(res => {\r\n          setSending(false);\r\n          if(!res.data.success) {\r\n            message.error(res.data.msg)\r\n          } else {\r\n            const token = res.data.data.token;\r\n            if(token)\r\n              authLib.saveToken(token)\r\n            props.login(email);\r\n            props.closeAuthenForm();\r\n            formLogin.resetFields();\r\n          }\r\n        }, err => {\r\n          setSending(false);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n      formRegiser.resetFields();\r\n      formLogin.resetFields();\r\n    }, [props.showAuthenForm])\r\n    \r\n    return (\r\n    <Tabs defaultActiveKey=\"register\">\r\n        <TabPane tab=\"Register\" key=\"register\">\r\n        <Form\r\n        form={formRegiser}\r\n            {...formItemLayout}\r\n            name=\"register\"\r\n            onFinish={onFinishRegister}\r\n            scrollToFirstError\r\n            >\r\n                <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n          {\r\n            max: 50,\r\n            message: 'Only 50 characters'\r\n          }\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n          {\r\n            whitespace: true,\r\n            message: 'Password not valid'\r\n          },\r\n          {\r\n            max: 16,\r\n            message: 'Only 16 characters'\r\n          }\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"confirm\"\r\n        label=\"Confirm Password\"\r\n        dependencies={['password']}\r\n        hasFeedback\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please confirm your password!',\r\n          },\r\n          ({ getFieldValue }) => ({\r\n            validator(rule, value) {\r\n              if (!value || getFieldValue('password') === value) {\r\n                return Promise.resolve();\r\n              }\r\n              return Promise.reject('The two passwords that you entered do not match!');\r\n            },\r\n          }),\r\n        ]}\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Row justify=\"center\">\r\n        <Spin spinning={sending} />\r\n      </Row>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" className=\"register-form-button\" htmlType=\"submit\" disabled={sending}>\r\n          Register\r\n        </Button>\r\n      </Form.Item>\r\n        </Form>\r\n        </TabPane>\r\n        <TabPane tab=\"Login\" key=\"login\">\r\n        <Form\r\n        form={formLogin}\r\n        {...formItemLayout}\r\n      name=\"normal_login\"\r\n      className=\"login-form\"\r\n      onFinish={onFinishLogin}\r\n    >\r\n      <Form.Item\r\n        name=\"email\"\r\n        label=\"E-mail\"\r\n        rules={[\r\n          {\r\n            type: 'email',\r\n            message: 'The input is not valid E-mail!',\r\n          },\r\n          {\r\n            required: true,\r\n            message: 'Please input your E-mail!',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        name=\"password\"\r\n        label=\"Password\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your password!',\r\n          },\r\n        ]}\r\n        hasFeedback\r\n      >\r\n        <Input.Password />\r\n      </Form.Item>\r\n      <Row justify=\"center\">\r\n        <Spin spinning={sending} />\r\n      </Row>\r\n      <Form.Item {...tailFormItemLayout}>\r\n        <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" disabled={sending}>\r\n          Log in\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n        </TabPane>\r\n  </Tabs>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  showAuthenForm: state.showAuthenForm,\r\n});\r\n\r\nconst mapDispathToProps = dispatch => ({\r\n  closeAuthenForm: () => {dispatch(closeAuthenForm())},\r\n  register: (email) => {dispatch(register({email}))},\r\n  login: (email) => {dispatch(login({email}))}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(AuthenForm);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Icon = (props) => {\r\n    const {name, ...other} = props;\r\n    return (\r\n        <i data-testid=\"icon\" className={`las ${name}`} {...other}></i>\r\n    )\r\n}\r\n\r\nIcon.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Icon;","import axios from '../lib/axiosConfig';\r\n\r\nfunction execute(value) {\r\n    const api ='/order';\r\n    return axios.post(api, value)\r\n}\r\n\r\nexport default execute;","import axios from '../lib/axiosConfig';\r\n\r\nfunction execute(value) {\r\n    const api ='/fee';\r\n    return axios.post(api, value)\r\n}\r\n\r\nexport default execute;","import React, {useState, useEffect} from 'react';\r\nimport {Row, Col, Tabs, Form, Input, Button, List, Switch, DatePicker, Typography, Divider, Drawer, Spin, message} from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux'\r\nimport Icon from './Icon'\r\nimport {closeCart, clearCart, addOrder} from '../actions/userActions';\r\nimport {removeBookAction} from '../actions/orderActions'\r\nimport * as _ from 'lodash'\r\nimport sendOrderService from '../services/sendOrderService';\r\nimport feeService from '../services/getFeeService';\r\nimport moment from 'moment'\r\nimport { set } from 'date-fns';\r\n\r\nfunction range(start, end) {\r\n  const result = [];\r\n  for (let i = start; i < end; i++) {\r\n    result.push(i);\r\n  }\r\n  return result;\r\n}\r\n\r\nexport const PizzaBookItem = (props) => {\r\n    return (\r\n        <Row className=\"book-items\">\r\n            <Col span={6} className=\"img-list\">\r\n                <img src={props.url} />\r\n            </Col>\r\n            <Col span={5} className=\"name-list\">\r\n                {props.name}\r\n            </Col>\r\n            <Col span={5} className=\"size-list\">\r\n                {props.number} {props.number > 1 ? ' pizzas' : ' pizza'}\r\n            </Col>\r\n            <Col span={5} className=\"price-list\">\r\n                ${props.number * props.price}\r\n            </Col>\r\n            <Col span={3} className=\"remove-list\">\r\n                <Icon name=\"la-trash-alt\" onClick={event => {props.removeAction(props.id)}}/>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nPizzaBookItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.number.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}\r\n\r\nconst layout = {\r\n    labelCol: {\r\n      span: 5,\r\n    },\r\n    wrapperCol: {\r\n      span: 19,\r\n    },\r\n  };\r\n  const tailLayout = {\r\n    wrapperCol: {\r\n      span: 24,\r\n    },\r\n  };\r\n\r\nexport const DrawerCart = (props) => {\r\n    let [imme, setImme] = useState(true);\r\n    let [sending, setSending] = useState(false);\r\n    let [fee, setFee] = useState(0);\r\n    let [gotFee, setGotFee] = useState(false)\r\n    let [enableBtn, setEnableBtn] = useState({fee: true, order: false});\r\n    \r\n    let total = props.bookItems?.reduce((total, i) => (total + i.price), 0);\r\n    total += fee;\r\n    total = total.toFixed(2);\r\n    const totalText = props.bookItems?.length > 0 ? '$' + total + '(' + 'Eur' + (total * props.rate).toFixed(2) + ')': '';\r\n\r\n    useEffect(() => {\r\n    //enable button\r\n        if(sending) {\r\n          setEnableBtn({fee: false, order: false})\r\n          return;\r\n        }\r\n        const enableFee = gotFee ? false: true;\r\n        const enableOrder = !enableFee ? props.bookItems?.length > 0 ? true : false : false;\r\n        setEnableBtn({fee: enableFee, order: enableOrder})\r\n    }, [props.bookItems?.length, gotFee, sending])\r\n\r\n    const onGetFee = async () => {\r\n      try {\r\n        await form.validateFields();\r\n        setSending(true)\r\n        feeService({customer_address: form.getFieldValue('customer_address')}).then(res => {\r\n          setSending(false)\r\n          if(!res.data.success) {\r\n            message.error(res.data.msg)\r\n            return\r\n          } else {\r\n            setGotFee(true)\r\n            setFee(parseFloat(res.data.data.fee));\r\n            setEnableBtn({fee: false, order: props.bookItems?.length == 0 ? false : true})\r\n          }\r\n        })\r\n      } catch (err) {\r\n        setSending(false)\r\n      }\r\n    }\r\n\r\n    const onFinish = async () => {\r\n      try{\r\n        await form.validateFields();\r\n        const fieldsValue = form.getFieldsValue();\r\n        const values = {\r\n          ...fieldsValue,\r\n          'schedule': fieldsValue['schedule'] ? fieldsValue['schedule'].format('YYYY-MM-DD HH:mm'): fieldsValue['sendimmediate'] ? 'immediately': '',\r\n        };\r\n        \r\n        const bookItems = _.cloneDeep(props.bookItems).map(p => {delete p.bookId; return {...p, pizza_id: p.id}});\r\n\r\n        const payload = {...values, email: props.user, order_items: bookItems, total, fee, created_at: new Date().getTime()};\r\n        setSending(true)\r\n        //send order request\r\n        sendOrderService(payload).then(res => {\r\n          setSending(false)\r\n          if(!res.data.success) {\r\n            message.error(res.data.msg)\r\n          } else {\r\n            form.resetFields();\r\n            props.closeCart();\r\n            props.clearCart();\r\n            props.addOrder({...payload})\r\n            setFee(0)\r\n            message.success('Pizza ordered successfully')\r\n          }\r\n        })\r\n      } catch(err) {\r\n        setSending(false)\r\n      }\r\n      \r\n\r\n      };\r\n\r\n      const configSchedule = {\r\n        rules: [\r\n          {\r\n            type: 'object',\r\n            required: !imme,\r\n            message: 'Please select time!',\r\n          },\r\n        ],\r\n      };\r\n      \r\n    const bookItemsRender = _.groupBy(props.bookItems, 'id')\r\n    const uniqBookItems = _.uniqBy(props.bookItems, 'id').map(p => {\r\n      return {...p, number: bookItemsRender[p.id].length}\r\n    });\r\n\r\n    const footerList = (\r\n      <div>\r\n        <div className=\"fee-list\">{'Fee ' + '$' + fee}</div>\r\n        <div className=\"total-list\">{'Total ' + totalText}</div>\r\n      </div>\r\n    )\r\n\r\n    const disabledDate = (current) => {\r\n      return current < moment().startOf('day');\r\n  }\r\n  \r\n  const disabledTime = () => {\r\n    return {\r\n      disabledHours: () => range(0, 24).filter(v => v < (new Date().getHours() + 1) || v > 21)\r\n    };\r\n  }\r\n\r\n    const [form] = Form.useForm();\r\n    return (\r\n        <Drawer\r\n          title=\"Your pizza(s)\"\r\n          placement=\"right\"\r\n          width={720}\r\n          closable={true}\r\n          onClose={props.closeCart}\r\n          visible={props.showCart}\r\n        >\r\n          <List\r\n            size=\"small\"\r\n            header={<div>Booked Pizzas</div>}\r\n                footer={footerList}\r\n            bordered\r\n            dataSource={uniqBookItems}\r\n            renderItem={item => <PizzaBookItem {...item} removeAction={props.removeBook}/>}\r\n            className=\"booked-items-list\"\r\n            />\r\n            <Divider orientation=\"left\">Order Information</Divider>\r\n            <Form\r\n      {...layout}\r\n      form={form}\r\n      name=\"orderForm\"\r\n      initialValues={{\r\n        sendimmediate: true\r\n      }}\r\n    >\r\n      <Form.Item\r\n        label=\"Name\"\r\n        name=\"customer_name\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your name!',\r\n          },\r\n          {\r\n            whitespace: true,\r\n            message: 'Password not valid'\r\n          },\r\n          {\r\n            max: 50,\r\n            message: 'Only 50 characters'\r\n          }\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Address\"\r\n        name=\"customer_address\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your address!',\r\n          },\r\n          {\r\n            whitespace: true,\r\n            message: 'Password not valid'\r\n          },\r\n          {\r\n            max: 50,\r\n            message: 'Only 50 characters'\r\n          }\r\n        ]}\r\n      >\r\n        <Input onChange={evt => {setGotFee(false)}} />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Phone\"\r\n        name=\"customer_phone\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input your phone!',\r\n          },\r\n          {\r\n            whitespace: true,\r\n            message: 'Password not valid'\r\n          },\r\n          {\r\n            max: 50,\r\n            message: 'Only 50 characters'\r\n          }\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item name=\"sendimmediate\" label=\"Send immediately\">\r\n        <Switch defaultChecked checked={imme} onChange={(vl) => {setImme(vl); setTimeout(() => {form.validateFields(['schedule'])}, 0) }}/>\r\n      </Form.Item>\r\n      <Form.Item name=\"schedule\" label=\"Schedule\" {...configSchedule}>\r\n        <DatePicker showTime format=\"YYYY/MM/DD HH:mm\" disabled={imme} disabledDate={disabledDate} disabledTime={disabledTime}/>\r\n      </Form.Item>\r\n      <Row justify=\"center\">\r\n        <Spin spinning={sending} />\r\n      </Row>\r\n      <Row>\r\n        <Col span={12}>\r\n          <Form.Item {...tailLayout}>\r\n            <Button type=\"danger\" htmlType=\"submit\" id=\"fee-btn\" disabled={!enableBtn.fee || sending} onClick={onGetFee}>\r\n              Get Fee\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form.Item {...tailLayout}>\r\n          <Button type=\"danger\" htmlType=\"submit\" id=\"order-btn\" disabled={!enableBtn.order || sending} onClick={onFinish}>\r\n            Order\r\n          </Button>\r\n        </Form.Item>\r\n        </Col>\r\n      </Row>\r\n      \r\n    </Form>\r\n        </Drawer>\r\n    \r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    bookItems: state.book,\r\n    showCart: state.showCart,\r\n    user: state.user,\r\n    rate: state.rate\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    closeCart: () => {dispatch(closeCart())},\r\n    removeBook: id => {dispatch(removeBookAction(id))},\r\n    clearCart: () => {dispatch(clearCart())},\r\n    addOrder: (order) => {dispatch(addOrder(order))}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerCart);","import {ORDERACTIONS} from './ActionTypes';\r\nexport const bookAction = (itemInfo) => (\r\n    {\r\n     type: ORDERACTIONS.BOOK,\r\n     payload: itemInfo\r\n    }\r\n)\r\n\r\nexport const removeBookAction = (id) => (\r\n    {\r\n        type: ORDERACTIONS.REMOVEBOOK,\r\n        payload: id\r\n    }\r\n)\r\n\r\nexport const orderAction = (orderInfo) => (\r\n    {\r\n     type: ORDERACTIONS.ORDER,\r\n     payload: orderInfo\r\n    }\r\n)\r\n\r\nexport const paymentAction = (paymentInfo) => (\r\n    {\r\n     type: ORDERACTIONS.PAYMENT,\r\n     payload: paymentInfo\r\n    }\r\n)","import React, {useState, useRef, forwardRef} from 'react';\r\nimport {Drawer, Row, Col, Modal} from 'antd'\r\nimport \"./layout.css\";\r\nimport {connect} from 'react-redux'\r\nimport {\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport AuthenForm from '../authenForm';\r\nimport DrawerCart from '../drawerCart';\r\nimport {showAuthenForm, closeAuthenForm, logout} from '../../actions/userActions';\r\nimport authenLib from '../../lib/auth';\r\n\r\n const BaseLayout = (props) => {\r\n\r\n    const showModal = (e) => {\r\n        e.preventDefault();\r\n        props.showAuthenForm();\r\n    }\r\n\r\n    const onCancel=(e) => {\r\n        props.closeAuthenForm();\r\n    }\r\n\r\n    const logout = e => {\r\n        e.preventDefault();\r\n        authenLib.removeToken();\r\n        props.logout();\r\n    }\r\n    \r\n    return (\r\n        <div className=\"main-layout\">\r\n        <header className=\"header\">\r\n            <Row justify=\"center\">\r\n                <Col span={20}>\r\n                    <Row>\r\n                        <Col span={6} className=\"logo\">\r\n                            <h1>P</h1>\r\n                        </Col>\r\n                        <Col span={14} className=\"navigation\">\r\n                            <ul>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/\">Our Pizza</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/history\">History</Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/order\">Order</Link>\r\n                                </li>\r\n                                {!props.login && <li className=\"nav-item\">\r\n                                    <a href=\"/\" onClick={showModal}>Register/Login</a>\r\n                                </li>}\r\n                            </ul>\r\n                        </Col>\r\n                        {props.login && (<>\r\n                        <Col span={2} className=\"user-info\">\r\n                            <span>{`Hi ${props.user}`}</span>\r\n                        </Col>\r\n                        <Col span={2} className=\"user-logout\">\r\n                            <a href=\"/\" onClick={logout}>Logout</a>\r\n                        </Col></>)}\r\n                    </Row>\r\n                </Col>\r\n            </Row>\r\n        </header>\r\n        <main>\r\n            {props.children}\r\n        </main>\r\n        <Modal\r\n          title=\"Register/Login\"\r\n          centered\r\n          visible={props.authenForm}\r\n          onCancel={onCancel}\r\n          footer={null}\r\n        >\r\n          <AuthenForm/>\r\n        </Modal>\r\n        <DrawerCart />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.login,\r\n    authenForm: state.showAuthenForm,\r\n    user: state.user\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showAuthenForm: () => {dispatch(showAuthenForm())},\r\n    closeAuthenForm: () => {dispatch(closeAuthenForm())},\r\n    logout: () => {dispatch(logout())}\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BaseLayout);","import React , {useState} from 'react';\r\nimport {Row, Col, Select, Button} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport {bookAction} from '../actions/orderActions'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PizzaItem = (props) => {\r\n    const addPizza = (e) => {\r\n        const pizzaInfo = {\r\n            id: props.id,\r\n            name: props.name,\r\n            url: props.url,\r\n            price: props.price,\r\n            currency: props.currency\r\n        }\r\n        props.book(pizzaInfo);\r\n    }\r\n    \r\n    return (\r\n        <Col span={5} className=\"item\" id={props.id}>\r\n            <div className=\"item-img\">\r\n                <img src={props.url} />\r\n            </div>\r\n            <div className=\"item-des\">\r\n                <div className=\"name\">\r\n                    {props.name}\r\n                </div>\r\n                <div className=\"price\">\r\n                    ${props.price}\r\n                </div>\r\n                <Button className=\"add-cart\" type=\"danger\" onClick={addPizza}>Add to cart</Button>\r\n            </div>\r\n        </Col>\r\n    )\r\n}\r\n\r\nPizzaItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    url: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired\r\n}\r\n\r\n  \r\n   const mapDispatchToProps = dispatch => ({\r\n    book: (pizza) => {dispatch(bookAction(pizza))}\r\n   })\r\n\r\nexport default connect(undefined, mapDispatchToProps)(PizzaItem);","import React from 'react';\r\nimport {Row, Col} from 'antd';\r\nimport Pizza from './pizza';\r\n\r\nconst PizzaList = (props) => {\r\n    const allPizzas = props.pizzas?.map(i => <Pizza key={i.id} {...i} />);\r\n\r\n    return (\r\n        <Row className=\"pizza-area\">\r\n            {allPizzas}\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default PizzaList;","import React from 'react';\r\nimport {Badge} from 'antd';\r\nimport { connect } from 'react-redux';\r\nimport Icon from './Icon';\r\nimport {showCart} from '../actions/userActions'\r\nimport { useState } from 'react';\r\n\r\nexport const Cart = (props) => {\r\n    return (\r\n        <div className=\"cart-ico\" onClick={props.showCart}>\r\n                <Badge count={props.book.length}>\r\n                    <Icon name=\"la-shopping-cart\" />\r\n                </Badge>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    ...state\r\n   })\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    showCart: () => {dispatch(showCart())}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","import axios from '../lib/axiosConfig';\r\n\r\nfunction execute(page) {\r\n    const api = page ? '/pizzas?page=' + page : '/pizzas';\r\n    return axios.get(api)\r\n}\r\n\r\nexport default execute;","import React, {useState, useEffect} from 'react';\nimport { connect } from 'react-redux';\nimport {Row, Col, message, Spin, Pagination} from 'antd';\nimport './App.css';\nimport PizzaList from '../pizzaList';\nimport Cart from '../cart';\nimport getAllPizzasService from '../../services/getAllPizzasService'\n\nfunction App() {\n\n  let [pizzas, setPizzas] = useState([]); \n  let [sending, setSending] = useState(false);\n  let [totalPage, setTotalPage] = useState(0);\n\n  useEffect(() => {\n    setSending(true)\n    getAllPizzasService(1)\n    .then(res => {\n      setSending(false)\n      if(!res.data.success) {\n        message.error(res.data.msg)\n      } else {\n        setPizzas(res.data.data.pizzas)\n        setTotalPage(res.data.data.totalItems)\n      }\n    })\n  }, [])\n\n  const onChangePage = (page) => {\n    setSending(true)\n    getAllPizzasService(page)\n    .then(res => {\n      setSending(false)\n      if(!res.data.success) {\n        message.error(res.data.msg)\n      } else {\n        setPizzas(res.data.data.pizzas)\n        setTotalPage(res.data.data.totalItems)\n      }\n    })\n  }\n\n  return (\n    <div>\n      <Cart />\n      <Row justify=\"center\" className=\"main\">\n        <Col span={20}>\n          <Row justify=\"center\" className=\"loading-area\">\n            <Spin spinning={sending}/>\n          </Row>\n            <PizzaList pizzas={pizzas}/>\n         \n          <Row justify={\"end\"}>\n            <Pagination defaultCurrent={1} total={totalPage} pageSize={8} onChange={onChangePage}/>\n        </Row>\n        </Col>\n      </Row>\n      \n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  ...state\n })\n\n\nexport default connect(mapStateToProps) (App);\n","import React from 'react';\r\nexport {connect} from 'react-redux'\r\n\r\nexport const MustLogin = (props) => {\r\n    return (\r\n        <h1>You need to login to see this feature</h1>\r\n    )\r\n}\r\n\r\nexport default MustLogin","import axios from 'axios';\r\nimport config from '../config'\r\n\r\nfunction execute(timeStart, timeEnd) {\r\n    const api ='/api/history?timeStart=' + timeStart + '&timeEnd=' + timeEnd;\r\n    return axios.get(api, {headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(config.keyJwt)\r\n    }})\r\n}\r\n\r\nexport default execute;","import React, {useState, useEffect} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport MustLogin from './mustLogin';\r\nimport {startOfDay, endOfDay} from 'date-fns'\r\nimport getHistoryService from '../services/getHistoryService';\r\nimport {format} from 'date-fns'\r\nimport {Row, Col, Collapse, List, message, DatePicker, Divider, Alert, Spin } from 'antd'\r\nimport * as _ from 'lodash'\r\nimport moment from 'moment';\r\nimport {logout} from '../actions/userActions'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nexport const History = (props) => {\r\n    let [result, setResult] = useState([])\r\n    let [dateFilter, setDateFilter] = useState(new Date().getTime())\r\n    let [sending, setSending] = useState(false)\r\n    let arrayPanel  = [];\r\n    let resArr = [];\r\n\r\n    useEffect(() => {\r\n        if(!props.login)\r\n            return;\r\n        setSending(true)\r\n        getHistoryService(startOfDay(new Date(dateFilter)).getTime(), endOfDay(new Date(dateFilter)).getTime())\r\n        .then(res => {\r\n            \r\n            setSending(false)\r\n            if(!res.data.success) {\r\n                message.error(res.data.msg)\r\n                if(res.data.msg == 'Session timeout. Please re-login') {\r\n                    props.logout();\r\n                }\r\n            } else {\r\n                // console.log(res.data.data)\r\n                resArr = res.data.data;\r\n                let orders = _.groupBy(res.data.data, o => (format(new Date(o.created_at), 'yyyy/MM/dd')));\r\n\r\n                _.forEach(orders, (vl, k) => {\r\n                    const vlUniq = _.uniqBy(vl, 'order_id')\r\n                    arrayPanel.push(<Panel header={k} key={k} className=\"day-header\">\r\n                        <Collapse>\r\n                            {vlUniq.map((e, index) => renderNest(index, e))}\r\n                        </Collapse>\r\n                    </Panel>)\r\n                })\r\n\r\n                setResult(arrayPanel);\r\n            }\r\n        })\r\n        .catch(err => {\r\n        })\r\n    }, [dateFilter, props.login, props.order])\r\n\r\n    \r\n\r\n    const renderOrderItem = (orderItems) => {\r\n        return (\r\n            <List\r\n                header={<div>Booked pizzas</div>}\r\n                footer={<div></div>}\r\n                bordered\r\n                dataSource={orderItems}\r\n                renderItem={item => (\r\n                    <Row className=\"order-order-item\">\r\n                        <Col span={6} className=\"order-order-img\"><img src={item.url} /></Col>\r\n                        <Col span={6}>{item.name}</Col>\r\n                        <Col span={6}>${item.price}</Col>\r\n                    </Row>\r\n                )}\r\n    />\r\n        )\r\n    }\r\n\r\n    const renderNest = (id, order) => {\r\n        const header = <Row>\r\n            <Col span={5}>\r\n                {order.customer_name}\r\n            </Col>\r\n            <Col span={5}>\r\n                {order.customer_address}\r\n            </Col>\r\n            <Col span={5}>\r\n                {order.customer_phone}\r\n            </Col>\r\n            <Col span={5}>\r\n                Delivery: {order.schedule}\r\n            </Col>\r\n            <Col span={4}>\r\n            {`Total: $${order.total} (Eur ${(order.total * props.rate).toFixed(2)})`}\r\n            </Col>\r\n        </Row>\r\n        const orderItems = resArr.filter(i => i.order_id == order.order_id);\r\n        return (\r\n            <Collapse key={id}>\r\n                <Panel header={header} key=\"1\" className=\"order-items-panel\">\r\n                    {renderOrderItem(orderItems)}\r\n                </Panel>\r\n            </Collapse>\r\n        )\r\n    }\r\n\r\n    const disabledDate = (current) => {\r\n        return current < moment().startOf('day');\r\n    }\r\n\r\n    const onChangeDate = (date, dateString) => {\r\n        setDateFilter(date.valueOf())\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!props.login && <MustLogin/>}\r\n            {props.login && <>\r\n            <Row justify=\"center\">\r\n                <Col span=\"20\">\r\n                <Row style={{marginTop: '1rem'}}>\r\n                    <Col span={6}>Choose date history</Col>\r\n                    <Col span={18}>\r\n                    <DatePicker format=\"YYYY/MM/DD\"\r\n                            showToday defaultValue={moment()}\r\n                            onChange={onChangeDate}/>\r\n                    </Col>\r\n                        \r\n                    </Row>\r\n                    <Divider>Your history</Divider>\r\n                    {!!sending && <Spin spinning={sending}/>}\r\n                    {result.length == 0 && \r\n                    <>\r\n                        <Alert type=\"info\" message={\"You don't have any order on \" + format(new Date(dateFilter), 'yyyy/MM/dd') }/>\r\n                    </>}\r\n                    {result.length > 0 &&    <Collapse>\r\n                    {result}\r\n                    </Collapse>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n            \r\n            </>}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.login,\r\n    order: state.order,\r\n    rate: state.rate\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    logout: () => {dispatch(logout())}\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(History);","import React from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {Row, Col, Collapse, List, Divider, Alert} from 'antd'\r\nimport * as _ from 'lodash'\r\nimport {format} from 'date-fns'\r\n\r\nconst { Panel } = Collapse;\r\n\r\nexport const Order = (props) => {\r\n    let orders = _.groupBy(props.order, o => (format(new Date(o.created_at), 'yyyy/MM/dd')));\r\n\r\n    const renderOrderItem = (orderItems) => {\r\n        return (\r\n            <List\r\n                header={<div>Booked pizzas</div>}\r\n                footer={<div></div>}\r\n                bordered\r\n                dataSource={orderItems}\r\n                renderItem={item => (\r\n                    <Row className=\"order-order-item\">\r\n                        <Col span={6} className=\"order-order-img\"><img src={item.url} /></Col>\r\n                        <Col span={6}>{item.name}</Col>\r\n                        <Col span={6}>${item.price}</Col>\r\n                    </Row>\r\n                )}\r\n    />\r\n        )\r\n    }\r\n\r\n    const renderNest = (id, order) => {\r\n        const header = <Row>\r\n            <Col span={5}>\r\n                {order.customer_name}\r\n            </Col>\r\n            <Col span={5}>\r\n                {order.customer_address}\r\n            </Col>\r\n            <Col span={5}>\r\n                {order.customer_phone}\r\n            </Col>\r\n            <Col span={5}>\r\n                Delivery: {order.schedule}\r\n            </Col>\r\n            <Col span={4}>\r\n            {`Total: $${order.total} (Eur ${(order.total * props.rate).toFixed(2)})`}\r\n            </Col>\r\n        </Row>\r\n\r\n        return (\r\n            <Collapse key={id}>\r\n                <Panel header={header} key=\"1\" className=\"order-items-panel\">\r\n                    {renderOrderItem(order.order_items)}\r\n                </Panel>\r\n            </Collapse>\r\n        )\r\n    }\r\n\r\n    let arrayPanel  = [];\r\n    _.forEach(orders, (vl, k) => {\r\n        arrayPanel.push(<Panel header={k} key={k}>\r\n            <Collapse>\r\n                {vl.map((e, index) => renderNest(index, e))}\r\n            </Collapse>\r\n        </Panel>)\r\n    })\r\n        \r\n    return (\r\n        <Row>\r\n            <Col span={24}>\r\n            <Divider>Your orders:</Divider>\r\n            \r\n                {arrayPanel.length > 0 && (\r\n                    <Collapse>\r\n                    {arrayPanel}\r\n                </Collapse>\r\n                )}\r\n               {arrayPanel.length == 0 && (\r\n                <Row justify=\"center\">\r\n                    <Alert message=\"You don't have any order today. Please book our pizzas\" type=\"error\" />\r\n                </Row>\r\n               )}\r\n                </Col>\r\n               </Row>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    login: state.login,\r\n    order: state.order,\r\n    rate: state.rate\r\n})\r\nexport default connect(mapStateToProps)(Order);","import React from 'react';\r\nimport {Row, Col} from 'antd'\r\n\r\nexport default () => {\r\n    return (\r\n        <Row justify=\"center\">\r\n            <Col span={24}>\r\n                <h1 style={{textAlign: 'center'}}>No pizza here!</h1>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\nimport BaseLayout from './components/layout/layout'\r\nimport App from './components/app/App'\r\nimport History from './components/history'\r\nimport Order from './components/order'\r\nimport NotFound from './components/notfound'\r\nconst Main = (props) => {\r\n    return (\r\n        <Router>\r\n        <BaseLayout>\r\n                <Switch>\r\n                    <Route path=\"/history\">\r\n                        <History />\r\n                    </Route>\r\n                    <Route path=\"/order\">\r\n                        <Order />\r\n                    </Route>\r\n                    <Route exact path=\"/\">\r\n                        <App />\r\n                    </Route>\r\n                    <Route path=\"*\">\r\n                        <NotFound/>\r\n                    </Route>\r\n                </Switch>\r\n        </BaseLayout>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default Main;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux'\nimport configureStore from './store';\nimport Main from './main';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={configureStore()}>\n    <Main />\n </Provider>,\n document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from './reducers';\r\nexport default function configureStore() {\r\n return createStore(\r\n    reducer\r\n );\r\n}"],"sourceRoot":""}